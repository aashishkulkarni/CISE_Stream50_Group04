{"ast":null,"code":"var _jsxFileName = \"/Users/zahra/Desktop/CISE_Stream50_Group04/frontend/src/components/evidencetable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from \"react\";\nimport articles from \"../dummydata/articles.js\";\nimport { useTable, useSortBy, usePagination } from 'react-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Table = _ref => {\n  _s();\n\n  let {\n    columns,\n    data\n  } = _ref;\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    // Instead of using 'rows', we'll use page,\n    // which has only the rows for the active page\n    // The rest of these things are super handy, too ;)\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: {\n      pageIndex,\n      pageSize\n    }\n  } = useTable({\n    columns,\n    data,\n    initialState: {\n      pageIndex: 0\n    }\n  }, useSortBy, usePagination); // Render Data Table UI\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column =>\n          /*#__PURE__*/\n          // Add the sorting props to control sorting. For this example\n          // we can add them into the header props\n          _jsxDEV(\"th\", { ...column.getHeaderProps(column.getSortByToggleProps()),\n            children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: column.isSorted ? column.isSortedDesc ? ' ￿' : ' ￿' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: page.map((row, i) => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 26\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => gotoPage(0),\n        disabled: !canPreviousPage,\n        children: '<<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => previousPage(),\n        disabled: !canPreviousPage,\n        children: '<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => nextPage(),\n        disabled: !canNextPage,\n        children: '>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => gotoPage(pageCount - 1),\n        disabled: !canNextPage,\n        children: '>>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [pageIndex + 1, \" of \", pageOptions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"| Go to page:\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          defaultValue: pageIndex + 1,\n          onChange: e => {\n            const page = e.target.value ? Number(e.target.value) - 1 : 0;\n            gotoPage(page);\n          },\n          style: {\n            width: '100px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"select\", {\n        value: pageSize,\n        onChange: e => {\n          setPageSize(Number(e.target.value));\n        },\n        children: [3, 7, 15].map(pageSize => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: pageSize,\n          children: [\"Show \", pageSize]\n        }, pageSize, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Table, \"fPdbE2GtjcDhMWFrBC2LTKSyaY8=\", false, function () {\n  return [useTable];\n});\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useMemo","articles","useTable","useSortBy","usePagination","Table","columns","data","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageIndex","pageSize","initialState","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","getCellProps","length","e","target","value","Number","width"],"sources":["/Users/zahra/Desktop/CISE_Stream50_Group04/frontend/src/components/evidencetable.js"],"sourcesContent":["import React, {useMemo} from \"react\";\nimport articles from \"../dummydata/articles.js\";\nimport { useTable, useSortBy, usePagination } from 'react-table';\n\nconst Table = ({columns, data}) => {\nconst {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    \n    page, // Instead of using 'rows', we'll use page,\n    // which has only the rows for the active page\n    // The rest of these things are super handy, too ;)\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: { pageIndex, pageSize },\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: { pageIndex: 0 },\n    },\n    \n    useSortBy,\n    usePagination\n  )\n \n  // Render Data Table UI\n  return (\n    <>\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                // Add the sorting props to control sorting. For this example\n                // we can add them into the header props\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  {column.render('Header')}\n                  {/* Add a sort direction indicator */}\n                  <span>\n                    {column.isSorted\n                      ? column.isSortedDesc\n                        ? ' ￿'\n                        : ' ￿'\n                      : ''}\n                  </span>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row)\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                  return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>  \n     {/* Pagination */}\n     <div className=\"pagination\">\n        <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n          {'<<'}\n        </button>{' '}\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n          {'<'}\n        </button>{' '}\n        <button onClick={() => nextPage()} disabled={!canNextPage}>\n          {'>'}\n        </button>{' '}\n        <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n          {'>>'}\n        </button>{' '}\n        <span>\n          Page{' '}\n          <strong>\n \n            {pageIndex + 1} of {pageOptions.length}\n          </strong>{' '}\n        </span>\n        <span>\n          | Go to page:{' '}\n          <input\n            type=\"number\"\n            defaultValue={pageIndex + 1}\n            onChange={e => {\n              const page = e.target.value ? Number(e.target.value) - 1 : 0\n              gotoPage(page)\n            }}\n            style={{ width: '100px' }}\n          />\n        </span>{' '}\n        <select\n          value={pageSize}\n          onChange={e => {\n            setPageSize(Number(e.target.value))\n          }}\n        >\n          {[3, 7, 15].map(pageSize => (\n            <option key={pageSize} value={pageSize}>\n              Show {pageSize}\n            </option>\n          ))}\n        </select>\n      </div>\n    </>\n  )\n};\n  \nexport default Table;"],"mappings":"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"},"metadata":{},"sourceType":"module"}